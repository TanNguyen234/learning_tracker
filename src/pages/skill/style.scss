.ant-form {
  min-width: 400px;
  padding: 10px !important;
  height: 470px;
  background-color: #fff;
  border: 2px solid #5c5c5c;
  border-radius: 10px;
}
.study {
  padding: 24px;
  background-color: #f4f4f4;
  min-height: 100vh;
  padding: 24px;
  margin: auto;
  max-width: 100%;
  width: 100%;

  // üëâ Khi m√†n h√¨nh l·ªõn, m·ªü r·ªông t·ªëi ƒëa chi·ªÅu ngang
  @media (min-width: 1200px) {
    max-width: 1100px;
  }

  @media (min-width: 1440px) {
    max-width: 1280px;
  }

  @media (min-width: 1800px) {
    max-width: 1440px;
  }

  &__navigate {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 12px;
    margin-bottom: 24px;

    .study__title {
      font-size: 28px;
      font-weight: 600;
      color: #222;
    }

    button {
      font-size: 16px;
    }
  }

  &__timeline {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    gap: 20px;
    margin-bottom: 32px;

    .study__time-block {
      background-color: #ffffff;
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      transition: transform 0.2s ease;

      &:hover {
        transform: translateY(-4px);
      }

      &--label {
        font-size: 18px;
        font-weight: 600;
        color: #1677ff;
        margin-bottom: 8px;
      }

      &--content {
        font-size: 16px;
        color: #333;
      }
    }
  }

  &__summary {
    background: #ffffff;
    padding: 24px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);

    h3 {
      font-size: 22px;
      font-weight: 600;
      margin-bottom: 16px;
    }

    ul {
      list-style: none;
      padding: 0;
      margin: 0;

      li {
        font-size: 16px;
        color: #444;
        margin-bottom: 8px;
        padding-left: 20px;
        position: relative;

        &::before {
          content: "‚Ä¢";
          position: absolute;
          left: 0;
          color: #1677ff;
        }
      }
    }
  }

  // Responsive extra tweaks
  @media (max-width: 576px) {
    &__navigate {
      flex-direction: column;
      align-items: flex-start;

      .study__title {
        font-size: 24px;
      }
    }

    &__summary h3 {
      font-size: 20px;
    }

    &__timeline .study__time-block {
      padding: 16px;
    }
  }
}

.floating-button {
  position: fixed !important;
  bottom: 24px; // Kho·∫£ng c√°ch t·ª´ d∆∞·ªõi l√™n
  right: 0px; // Kho·∫£ng c√°ch t·ª´ b√™n ph·∫£i
}

$cyan: #0505a9;
$dark: #ffffff;
$borderW: 2px;

.blob-btn {
  $numOfBlobs: 4;
  z-index: 1;
  position: relative;
  padding: 20px 46px;
  margin-bottom: 30px;
  text-align: center;
  text-transform: uppercase;
  color: $cyan;
  font-size: 16px;
  font-weight: bold;
  background-color: transparent;
  outline: none;
  border: none;
  transition: color 0.5s;
  cursor: pointer;
  border-radius: 30px;

  &:before {
    content: "";
    z-index: 1;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border: $borderW solid $cyan;
    border-radius: 30px;
  }

  &:after {
    content: "";
    z-index: -2;
    position: absolute;
    left: $borderW * 1.5;
    top: $borderW * 1.5;
    width: 100%;
    height: 100%;

    transition: all 0.3s 0.2s;
    border-radius: 30px;
  }

  &:hover {
    color: $dark;
    border-radius: 30px;

    &:after {
      transition: all 0.3s;
      left: 0;
      top: 0;
      border-radius: 30px;
    }
  }

  &__inner {
    z-index: -1;
    overflow: hidden;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border-radius: 30px;
    background: #ffffff;
  }

  // additional container created, because in FF blobs are breaking overflow:hidden of element with svg gooey filter
  &__blobs {
    position: relative;
    display: block;
    height: 100%;
    filter: url("#goo");
  }

  &__blob {
    position: absolute;
    top: $borderW;
    width: 100% / $numOfBlobs;
    height: 100%;
    background: $cyan;
    border-radius: 100%;
    transform: translate3d(0, 150%, 0) scale(1.7);
    transition: transform 0.45s;

    @supports (filter: url("#goo")) {
      transform: translate3d(0, 150%, 0) scale(1.4);
    }

    @for $i from 1 through $numOfBlobs {
      &:nth-child(#{$i}) {
        left: ($i - 1) * (120% / $numOfBlobs);
        transition-delay: ($i - 1) * 0.08s;
      }
    }

    .blob-btn:hover & {
      transform: translateZ(0) scale(1.7);

      @supports (filter: url("#goo")) {
        transform: translateZ(0) scale(1.4);
      }
    }
  }
}

.blob-btn.ant-btn {
  background-color: transparent !important;
  border: 0 !important;
}